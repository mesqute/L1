package main

import (
	"fmt"
	"sync"
)

/*Задание:
Реализовать структуру-счетчик, которая будет инкрементироваться в конкурентной среде.
По завершению программа должна выводить итоговое значение счетчика.
*/

type MuxIn struct {
	i   int
	mux sync.Mutex
}

func (m *MuxIn) Add() {
	m.mux.Lock()
	m.i++
	m.mux.Unlock()
}

func main() {
	// создаем экземпляр структуры и сохраняем в переменную указатель
	muxin := new(MuxIn)
	// объявляем новый WaitGroup
	var wg sync.WaitGroup
	// запускаем несколько инкрементеров
	for i := 0; i < 5; i++ {
		// увеличиваем счетчик ожидания
		wg.Add(1)
		// каждый инкрементор увеличивает значение структуры на i + 1
		// (первый инкрементор на 1, пятый на 5)
		go func(num int) {
			for i := 0; i < num; i++ {
				muxin.Add()
			}
			wg.Done()
		}(i + 1)
	}
	// ждем завершения всех горутин
	wg.Wait()
	// выводим полученное значение
	fmt.Println("полученное значение:", muxin.i)
}
